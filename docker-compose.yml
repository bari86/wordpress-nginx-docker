version: '3.9'
services:

# Last update: 14/08/2024
# Author: MariHost

# Wordpress     # default port 9000 (FastCGI)
  wordpress:
    build:
      context: .
      dockerfile: Dockerfile
    image: wordpress-custom
    container_name: wp-wordpress
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - wordpress
    depends_on:
      - database
    volumes:
      - ${WORDPRESS_LOCAL_HOME}:/var/www/html
      - ${WORDPRESS_UPLOADS_CONFIG}:/usr/local/etc/php/conf.d/uploads.ini
#      - ${WORDPRESS_LOCAL_PLUGINS}:/var/www/html/wp-content/plugins/ # Not working. To check permission issue. Might need to run as www-data
#      - ${WORDPRESS_LOCAL_THEMES}:/var/www/html/wp-content/themes/ # Not working. To check permission issue. Might need to run as www-data
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_TABLE_PREFIX=wpmh_
#      - WORDPRESS_ADMIN_USER=adminname # Might be incorrect
#      - WORDPRESS_ADMIN_PASSWORD=adminpassword # Might be incorrect
#      - WORDPRESS_ADMIN_EMAIL=adminemail@example.com # Might be incorrect
      - WORDPRESS_CONFIG_EXTRA=
          /* WP Memory Limit */
          define( 'WP_MEMORY_LIMIT', '256M' );
          /* Redis */
          define( 'WP_REDIS_HOST', 'redis' );
          define( 'WP_REDIS_PORT', '${REDIS_PORT}' );
          define( 'WP_REDIS_PASSWORD', '${REDIS_PASSWORD}' );
          define( 'WP_REDIS_PREFIX', '${WORDPRESS_REDIS_PREFIX}' );
          define( 'WP_CACHE_KEY_SALT', '${WORDPRESS_REDIS_CACHE_KEY_SALT}' );
          /* Domain URL */
          define( 'WP_HOME', 'https://${WORDPRESS_DOMAIN}' );
          define( 'WP_SITEURL', 'https://${WORDPRESS_DOMAIN}' );
          /* Enable Debug */
          define( 'WP_DEBUG', true );
          /* Enable Debug logging to the /wp-content/debug.log file */
          define( 'WP_DEBUG_LOG', true );
          /* Disable front end display of errors and warnings */
          define( 'WP_DEBUG_DISPLAY', false );
          @ini_set( 'display_errors', 0 );

# Wordpress CLI
  wordpresscli:
    container_name: wp-wordpress-cli
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - wordpress
    depends_on:
      - wordpress
      - database
    image: wordpress:cli-2.11.0-php8.3 # Wordpress-CLI Version 2.11.0 PHP8.3
    user: $WORDPRESSCLI_UID:$WORDPRESSCLI_GUID
    command: tail -f /dev/null
    # TODO To test command below. Might not be working yet
    #command: >
    #  sh -c "
    #    wp core install --url=http://localhost:80 --title=Example --admin_user=admin --admin_password=password --admin_email=admin@example.com
    #    wp plugin install hello-dolly --activate
    #    wp theme install twentynineteen --activate
    #  "
    volumes:
      - ${WORDPRESS_LOCAL_HOME}:/var/www/html
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}

# Redis
  redis:
    image: rapidfort/redis:7.4.0 # RapidFort hardened image
    container_name: wp-redis
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ${REDIS_DATA}:/data
    ports:
      - '${REDIS_PORT:-6379}:6379'
    networks:
      - wordpress
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
#      - REDIS_IO_THREADS=4 # Poor performance. Not sure why. Need to recheck?
#      - REDIS_IO_THREADS_DO_READS=yes # Poor performance. Not sure why. Need to recheck?
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s

# Nginx (Working)
  nginx:
    image: nginx:alpine # TODO: Need a specific version here to do version control
    container_name: wp-nginx
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - wordpress
    depends_on:
      - wordpress
    ports:
      - "80:80"    # http
      - "443:443"   # https
    volumes:
      - ${WORDPRESS_LOCAL_HOME}:/var/www/html
      - ${NGINX_CONF}:/etc/nginx/conf.d/default.conf
      - ${NGINX_SSL_CERTS}:/etc/ssl:ro
      - ${NGINX_LOGS}:/var/log/nginx
      - ${NGINX_CACHE}:/etc/nginx/cache
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost/", "--insecure"]
      interval: 30s
      timeout: 3s
      retries: 3

# Nginx Custom Build (Not working yet)
#  nginx:
#    image: nginx:1.17
#    container_name: wp-nginx
#    env_file:
#      - .env
#    restart: unless-stopped
#    networks:
#      - wordpress
#    depends_on:
#      - wordpress
#    ports:
#      - "80:80"    # http
#      - "443:443"   # https
#    volumes:
#      - ${WORDPRESS_LOCAL_HOME}:/var/www/html
#      - ${NGINX_CONF}:/etc/nginx/conf.d/default.conf
#      - ${NGINX_SSL_CERTS}:/etc/ssl:ro
#      - ${NGINX_LOGS}:/var/log/nginx
#      - ${NGINX_CACHE}:/etc/nginx/cache
#    command: apk add --update curl && curl -XPURGE http://nginx/cache_purge
#    healthcheck:
#      test: ["CMD", "curl", "-f", "https://localhost/", "--insecure"]
#      interval: 30s
#      timeout: 3s
#      retries: 3

# Nginx Bitnami (Not working yet. To retest. New block) 
#nginx:
#  image: bitnami/nginx:1.25.3
#  container_name: wp-nginx
#  env_file:
#    - .env
#  restart: unless-stopped
#  networks:
#    - wordpress
#  depends_on:
#    - wordpress
#  ports:
#    - "80:80"
#    - "443:443"
#  volumes:
#    - ${WORDPRESS_LOCAL_HOME}:/var/www/html
#    - ${NGINX_CONF}:/opt/bitnami/nginx/conf/server_blocks/default.conf:ro
#    - ${NGINX_SSL_CERTS}:/etc/ssl:ro
#    - ${NGINX_LOGS}:/opt/bitnami/nginx/logs
#    - ${NGINX_CACHE}:/opt/bitnami/nginx/cache
#  healthcheck:
#    test: ["CMD", "curl", "-f", "https://localhost/", "--insecure"]
#    interval: 30s
#    timeout: 3s
#    retries: 3

# Nginx Bitnami (Not working yet) 
#  nginx:
#    image: bitnami/nginx:1.25.3
#    container_name: wp-nginx
#    env_file:
#      - .env
#    restart: unless-stopped
#    networks:
#      - wordpress
#    depends_on:
#      - wordpress
#    ports:
#      - "80:80"    # Change the local port if necessary
#      - "443:443"   # Change the local port if necessary
#    volumes:
#      - ${WORDPRESS_LOCAL_HOME}:/var/www/html
#      - ${NGINX_SSL_CERTS}:/etc/ssl:ro
#      - ${NGINX_CONF}:/opt/bitnami/nginx/conf/server_blocks/default.conf:ro
##      - ${NGINX_CONF}:/bitnami/nginx/conf/server_blocks/default
##      - ${NGINX_CONF}:/opt/bitnami/nginx/conf/server_blocks/my_server_block.conf:ro
##      - ${NGINX_CONF}:/etc/nginx/conf.d/default.conf # Dev using this instead of the above line
##      - ${NGINX_SSL_CERTS}:/bitnami/nginx/conf/bitnami/certs
#      - ${NGINX_LOGS}:/bitnami/nginx/logs
#      - ${NGINX_CACHE}:/bitnami/nginx/cache
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:80/", "--insecure"]
#      interval: 30s
#      timeout: 3s
#      retries: 3

  # There are two SQL to choose from. MySQL tends to be faster. Therefore MariaDB is currently commented out.
  # Database using MariaDB
#  database:
#    image: bitnami/mariadb:10.11.6 # Bitnami MariaDB image
#    container_name: wp-database
#    env_file:
#      - .env
#    restart: unless-stopped
#    networks:
#      - wordpress
#    ports:
#      - '3306:3306'
#    environment:
#      - MARIADB_DATABASE=${MYSQL_DATABASE}
#      - MARIADB_USER=${MYSQL_USER}
#      - MARIADB_PASSWORD=${MYSQL_PASSWORD}
#      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#    volumes:
#      - mariadb_data:/bitnami/mariadb
#    healthcheck:
#      test: ['CMD', '/opt/bitnami/scripts/mariadb/healthcheck.sh']
#      interval: 15s
#      timeout: 5s
#      retries: 6

# TODO Not fully working yet. Can show login page but cannot login. Not sure why.
  # phpMyAdmin for MariaDB 
#  phpmyadmin:
#    image: bitnami/phpmyadmin:5.2.1  # Bitnami phpMyAdmin image
#    container_name: wp-phpmyadmin
#    env_file:
#      - .env
#    restart: unless-stopped
#    links:
#      - database
#    networks:
#      - wordpress
#    ports:
#      - "8180:8080"
#    volumes:
#      - phpmyadmin_data:/bitnami/mariadb
#    environment:
#      - DATABASE_ALLOW_NO_PASSWORD=${PHPMYADMIN_NO_PASSWORD}
#      - PHPMYADMIN_ALLOW_ARBITRARY_SERVER=${PHPMYADMIN_ARBITRARY_MARIADB}
#      - DATABASE_HOST=${MYSQL_DATABASE}
#      - DATABASE_PORT_NUMBER=${PHPMYADMIN_PORT}

  # Database using MySQL
  database:
    image: rapidfort/mysql:8.0.37 # RapidFort hardened MySQL image
    container_name: wp-database
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - wordpress
    ports:
      - '3306:3306'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_AUTHENTICATION_PLUGIN=CACHING_SHA2_PASSWORD
      - MYSQL_DEFAULT_AUTHENTICATION_PLUGIN=CACHING_SHA2_PASSWORD
    volumes:
      - 'mysql_data:/bitnami/mysql/data'
    #  - ${MYSQL_LOCAL_HOME}:/var/lib/mysql # Official MySQL image
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mysql/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6

# Working
  # phpMyAdmin for MySQL
  phpmyadmin:
    # image: bitnami/phpmyadmin:5.2.1  # Alternative Bitnami image
    image: phpmyadmin:5.2.1-apache  # Official phpMyAdmin image
    container_name: wp-phpmyadmin
    env_file:
      - .env
    restart: unless-stopped
    links:
      - database
    networks:
      - wordpress
    ports:
      - "8180:80"
    environment:
      - PMA_ARBITRARY=$PHPMYADMIN_ARBITRARY
      - PMA_HOST=$PHPMYADMIN_HOST
      - PMA_PORT=$PHPMYADMIN_PORT

  filebrowser:
    image: hurlenko/filebrowser
    container_name: wp-filebrowser
    env_file:
      - .env
    user: $FILEBROWSER_UID:$FILEBROWSER_GUID
    ports:
      - "8280:8080"
    volumes:
      - ${WORDPRESS_LOCAL_HOME}:/data
      - ${FILEBROWSER_CONFIG}:/config
    environment:
      - FB_USERNAME=fileadm23 # Username is 'fileadm23'. Please change the username upon login
      - FB_PASSWORD=$$2y$$08$$pjAWcSAz7CLNUVntdt2UMOUxjCq7quPOMwb3pGjfRt1aPdi7stkP6 # Password is 'FileChangeMe23Browser'. Please change the password upon login. Moving this to .env will break filebrowser. Not sure why yet.
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    # To run filebrowser behind Nginx, please refer https://hub.docker.com/r/hurlenko/filebrowser
    # You can use the script htpasswd -bnBC 8 "" FileChangeMe23Browser | grep -oP '\$2[ayb]\$.{56}' to get hashed password.

networks:
  wordpress:
    name: wp-wordpress
    driver: bridge

# For MariaDB only
#volumes:
#  mariadb_data:
#    driver: local
#  phpmyadmin_data:
#    driver: local

# For MySQL only
volumes:
  mysql_data:
    driver: local